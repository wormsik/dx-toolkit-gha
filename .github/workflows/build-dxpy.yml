on:
  workflow_dispatch:
    inputs:
      ref:
        description: Reference (commit, branch, tag, ...)
        default: stable
      deploy_to_pypi:
        description: Deploy to PyPi
        type: boolean
        default: false


jobs:
  dxpy:
    name: Build dxpy and release it to PyPi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Setup Python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
        with:
          python-version: '3.10'

      - name: Build dxpy
        run: python3 setup.py sdist
        working-directory: src/python

      - name: Deploy dist package
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: dxpy-src
          path: src/python/dist/*.tar.gz

      - name: Publish package distributions to PyPI
        if: ${{ github.event.inputs.dry_run == 'true' }}
        uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e
        with:
          working-directory: src/python

  dxpy-deb-xenial:
    name: Build dxpy Debian package for Ubuntu 16.04
    runs-on: ubuntu-latest
    steps:
      - name: Build debian package
        run: |
          mkdir dist
          docker run -v ./dist:/out --rm ubuntu:16.04 \\
            /bin/bash -xc \"apt-get update && apt-get install -y make python-setuptools python-pip python-virtualenv python-dev g++ cmake libboost1.58-all-dev libcurl4-openssl-dev zlib1g-dev libbz2-dev flex bison autoconf doxygen git curl software-properties-common debhelper devscripts r-base-core libdist-zilla-perl openjdk-8-jdk maven libssl-dev && \\
            git clone https://github.com/dnanexus/dx-toolkit.git; \\
            cd dx-toolkit; git checkout ${{ github.event.inputs.ref }}; build/build-dx-toolkit-debs.sh; \\
            mv /*.{changes,deb,dsc,tar.xz} /out/\"

      # - name: Build debian package
      #   run: |
      #     mkdir dist
      #     docker run -v ./dist:/out --rm dnanexus/dx-toolkit:16.04 \\
      #       /bin/bash -xc \"git clone https://github.com/dnanexus/dx-toolkit.git; \\
      #       cd dx-toolkit; git checkout ${{ github.event.inputs.ref }}; build/build-dx-toolkit-debs.sh; \\
      #       mv /*.{changes,deb,dsc,tar.xz} /out/\"

      - name: Deploy dist package
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: dxpy-deb-xenial
          path: dist/*
