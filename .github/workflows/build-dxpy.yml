on:
  workflow_dispatch:
    inputs:
      ref:
        description: Reference (commit, branch, tag, ...)
        default: stable
      deploy_to_pypi:
        description: Deploy to PyPi
        type: boolean
        default: false


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Setup Python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
        with:
          python-version: '3.10'

      - uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build dxpy
        run: python3 setup.py sdist
        working-directory: src/python

      - name: Upload dxpy artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: dxpy
          path: src/python/dist/*.tar.gz

      # FIXME: Move somewhere else - probably bump-version.yml?
      - name: Generate Java version file
        run: |
          VERSION=$(grep -o -E "[0-9]+\.[0-9]+\.[0-9]+" src/python/dxpy/toolkit_version.py)
          echo -e "package com.dnanexus;\nclass DXToolkitVersion {\n    public static final String TOOLKIT_VERSION = \"$VERSION\";\n}" > src/java/src/main/java/com/dnanexus/DXToolkitVersion.java

      - name: Build dxjava
        run: mvn compile assembly:single
        working-directory: src/java

      - name: Upload dxjava artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: dxjava
          path: src/java/target/*.jar

      - name: Publish package distributions to PyPI
        if: ${{ github.event.inputs.dry_run == 'true' }}
        uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e
        with:
          working-directory: src/python

  deb-xenial:
    name: Ubuntu 16.04 Debian packages
    runs-on: ubuntu-latest
    container:
      image: ubuntu:16.04
    steps:
      - name: Build debian package
        run: |
          mkdir dist
          apt-get update
          apt-get install -y make python-setuptools python-pip python-virtualenv python-dev g++ cmake libboost1.58-all-dev libcurl4-openssl-dev zlib1g-dev libbz2-dev flex bison autoconf doxygen git curl software-properties-common debhelper devscripts r-base-core libdist-zilla-perl openjdk-8-jdk maven libssl-dev
          git clone https://github.com/dnanexus/dx-toolkit.git
          cd dx-toolkit
          git checkout ${{ github.event.inputs.ref }}
          build/build-dx-toolkit-debs.sh
          mv ../*.changes ../*.deb ../*.dsc ../*.tar.xz ../dist/

      # - name: Build debian package
      #   run: |
      #     mkdir dist
      #     docker run -v ./dist:/out --rm dnanexus/dx-toolkit:16.04 \\
      #       /bin/bash -xc \"git clone https://github.com/dnanexus/dx-toolkit.git; \\
      #       cd dx-toolkit; git checkout ${{ github.event.inputs.ref }}; build/build-dx-toolkit-debs.sh; \\
      #       mv /*.{changes,deb,dsc,tar.xz} /out/\"

      - name: Deploy dist package
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: dxpy-deb-xenial
          path: dist/*

  deb-focal:
    name: Ubuntu 20.04 Debian packages
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    steps:
      - name: Build debian package
        run: |
          mkdir dist
          apt-get update
          apt-get install -y \
            locales \
            g++ \
            cmake \
            cmake \
            libboost-all-dev \
            libcurl4-openssl-dev \
            zlib1g-dev \
            libbz2-dev \
            flex \
            bison \
            autoconf \
            doxygen \
            git \
            curl \
            software-properties-common \
            debhelper \
            devscripts \
            libdist-zilla-perl \
            openjdk-11-jdk \
            maven \
            libssl-dev \
            libffi-dev \
            wget \
            python3 \
            python3-dev \
            python3-pip \
            python3-venv \
            python3-virtualenv \
            aria2 \
            sudo \
          locale-gen "en_US.UTF-8" \
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          git clone https://github.com/dnanexus/dx-toolkit.git
          cd dx-toolkit
          git checkout ${{ github.event.inputs.ref }}
          build/build-dx-toolkit-debs.sh
          mv ../*.changes ../*.deb ../*.dsc ../*.tar.xz ../dist/

      # - name: Build debian package
      #   run: |
      #     mkdir dist
      #     docker run -v ./dist:/out --rm dnanexus/dx-toolkit:16.04 \\
      #       /bin/bash -xc \"git clone https://github.com/dnanexus/dx-toolkit.git; \\
      #       cd dx-toolkit; git checkout ${{ github.event.inputs.ref }}; build/build-dx-toolkit-debs.sh; \\
      #       mv /*.{changes,deb,dsc,tar.xz} /out/\"

      - name: Deploy dist package
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: dxpy-deb-focal
          path: dist/*
